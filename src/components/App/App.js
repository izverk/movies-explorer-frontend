import React from 'react';
import { Route, Switch, useHistory, Redirect } from 'react-router-dom';
import './App.css';
import Header from '../Header/Header';
import Main from '../Main/Main';
import Footer from '../Footer/Footer';
import Movies from '../Movies/Movies';
import SavedMovies from '../SavedMovies/SavedMovies';
import Profile from '../Profile/Profile';
import Login from '../Login/Login';
import Register from '../Register/Register';
import Page404 from '../Page404/Page404';
import ModalMenu from '../ModalMenu/ModalMenu';
import moviesApi from '../../utils/MoviesApi';
import mainApi from '../../utils/MainApi';
import { CurrentUserContext } from '../../contexts/CurrentUserContext';
import {
	handleFields,
	handleDuration,
	filterWithKeyWord,
} from '../../utils/utils';
import {
	queryErrorMessageText,
	nothingFoundMessageText,
	formSubmitErrorText,
} from '../../utils/constants';

function App() {
	const history = useHistory();

	// –°—Ç–µ–π—Ç –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –º–µ–Ω—é –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
	const [modalMenuState, setModalMenuState] = React.useState(false);
	const changeModalMenuState = () => {
		setModalMenuState((modalMenuState) => !modalMenuState);
	};

	// =================== –¢–ï–ö–£–©–ò–ô –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–¨ - –†–ï–ì–ò–°–¢–†–ê–¶–ò–Ø, –ê–í–¢–û–†–ò–ó–ê–¶–ò–Ø, –ó–ê–ì–†–£–ó–ö–ê –ö–û–ù–¢–ï–ù–¢–ê ===================

	// –°—Ç–µ–π—Ç —Å –¥–∞–Ω–Ω—ã–º–∏ —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
	const [currentUser, setCurrentUser] = React.useState({});
	// –°—Ç–µ–π—Ç –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω–æ—Å—Ç–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
	const [isLoggedIn, setIsLoggedIn] = React.useState(false);
	// –°—Ç–µ–π—Ç —Å–æ–æ–±—â–µ–Ω–∏—è —Å –æ—à–∏–±–∫–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã –≤–≤–æ–¥–∞ –¥–∞–Ω–Ω—ã—Ö
	const [formSubmitError, setFormSubmitError] = React.useState(null);

	// –§—É–Ω–∫—Ü–∏—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
	function registerUser({ name, email, password }) {
		mainApi
			.register(name, email, password)
			.then((userData) => {
				loginUser({ email, password });
			})
			.catch((err) => {
				console.log('üöÄ ~ file: Register.js ~ line 35 ~ .then ~ err', err);
				// –≤—ã–≤–æ–¥–∏–º –æ—à–∏–±–∫—É –æ—Ç–ø—Ä–∞–≤–∫–∏ –¥–∞–Ω–Ω—ã—Ö –≤ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–µ AuthForm
				setFormSubmitError(formSubmitErrorText);
			});
	}

	// –§—É–Ω–∫—Ü–∏—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
	function loginUser({ email, password }) {
		mainApi
			.login(email, password)
			.then(({ token }) => {
				if (token) {
					localStorage.setItem('token', token);
					mainApi.setTokenHeaders(token);
					checkTokenAndLoadContent();
				} else {
					return;
				}
			})
			.catch((err) => {
				console.log(err);
				// –≤—ã–≤–æ–¥–∏–º –æ—à–∏–±–∫—É –æ—Ç–ø—Ä–∞–≤–∫–∏ –¥–∞–Ω–Ω—ã—Ö –≤ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–µ AuthForm
				setFormSubmitError(formSubmitErrorText);
			});
	}

	// –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–∞–ª–∏—á–∏—è —Ç–æ–∫–µ–Ω–∞ –∏ –∑–∞–ø—É—Å–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –µ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
	// (—Ä–∞–Ω–µ–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö —Ñ–∏–ª—å–º–æ–≤, –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –ø–æ–∏—Å–∫–∞ —Ñ–∏–ª—å–º–æ–≤)
	const checkTokenAndLoadContent = React.useCallback(() => {
		const token = localStorage.getItem('token');
		if (token) {
			// –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º —É —Å–µ—Ä–≤–µ—Ä–∞ –ø—Ä–æ–≤–µ—Ä–∫—É —Ç–æ–∫–µ–Ω–∞
			mainApi
				.checkToken(token)
				.then((userData) => {
					// —Å–æ—Ö—Ä–∞–Ω—è–µ–º —é–∑–µ—Ä–∞ –≤ —Å—Ç–µ–π—Ç
					setCurrentUser({
						name: userData.name,
						_id: userData._id,
						email: userData.email,
					});
					setIsLoggedIn(true);
					// —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–æ–∫–µ–Ω –≤ –∑–∞–≥–æ–ª–æ–≤–∫–∏ –∑–∞–ø—Ä–æ—Å–æ–≤
					mainApi.setTokenHeaders(token);
					// –¥–æ—Å—Ç–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞ –∏–∑ —Ö—Ä–∞–Ω–∏–ª–∏—â–∞
					getSavedSearchResults();
				})
				.then(() => {
					// –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º —É —Å–µ—Ä–≤–µ—Ä–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ —Ñ–∏–ª—å–º—ã
					// —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
					mainApi
						.getCards()
						.then((data) => {
							// –¥–æ–±–∞–≤–ª—è–µ–º –∏—Ö –≤ —Å—Ç–µ–π—Ç
							setSavedMovies(data);
						})
						.catch((err) => {
							console.log(err);
						});
				})
				.then(() => {
					history.push('/movies');
				})
				.catch((err) => {
					console.log(err);
				});
		}
	}, [history]);

	// –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É —Ç–æ–∫–µ–Ω–∞ –∏ –∑–∞–≥—Ä—É–∑–∫—É –∫–æ–Ω—Ç–µ–Ω—Ç–∞ —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
	React.useEffect(() => {
		checkTokenAndLoadContent();
	}, [checkTokenAndLoadContent]);

	// // –ó–≥—Ä—É–∂–∞–µ–º –∏—Å—Ö–æ–¥–Ω—ã–π –º–∞—Å—Å–∏–≤ —Ñ–∏–ª—å–º–æ–≤
	// React.useEffect(() => {
	// 	moviesApi
	// 		.getMovies()
	// 		.then((data) => {
	// 			console.log('üöÄ ~ file: App.js ~ line 113 ~ .then ~ data', data);
	// 			// —Ñ–æ—Ä–º–∏—Ä—É–µ–º –∏ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –ø–æ–ª—è –æ–±—ä–µ–∫—Ç–æ–≤
	// 			data = handleFields(data);
	// 			console.log('üöÄ ~ file: App.js ~ line 116 ~ .then ~ data', data);
	// 			setInitialMovies(data);
	// 		})
	// 		.catch((err) => {
	// 			console.log(err);
	// 		});
	// }, []);

	// –§—É–Ω–∫—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (—Ä–∞–Ω–µ–µ
	//  —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö —Ñ–∏–ª—å–º–æ–≤, –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –ø–æ–∏—Å–∫–∞ —Ñ–∏–ª—å–º–æ–≤)
	function getSavedSearchResults() {
		const savedMovies = JSON.parse(localStorage.getItem('movies'));
		const savedSearchText = localStorage.getItem('moviesInputValue');
		const saved–°heckboxState = JSON.parse(
			localStorage.getItem('shortFilmsCheckboxValue')
		);
		if (savedMovies) {
			setMovies(savedMovies);
		}
		if (savedSearchText) {
			setMoviesInputValue(savedSearchText);
		}
		if (saved–°heckboxState) {
			setShortFilmsCheckboxValue(saved–°heckboxState);
		}
	}

	// // –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ —Ñ–∏–ª—å–º—ã –ø—Ä–∏ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
	// React.useEffect(() => {
	// 	mainApi
	// 		.getCards()
	// 		.then((data) => {
	// 			setSavedMovies(data);
	// 		})
	// 		.catch((err) => {
	// 			console.log(err);
	// 		});
	// }, [setSavedMovies]);

	// =================== –õ–û–ì–ò–ö–ê –†–ê–ë–û–¢–´ –° –ö–ê–†–¢–û–ß–ö–ê–ú–ò –§–ò–õ–¨–ú–û–í ===================

	// –°—Ç–µ–π—Ç —Å –∏—Å—Ö–æ–¥–Ω—ã–º –º–∞—Å—Å–∏–≤–æ–º —Ñ–∏–ª—å–º–æ–≤ —Å–æ —Å—Ç–æ—Ä–æ–Ω–Ω–µ–≥–æ —Å–µ—Ä–≤–∏—Å–∞
	const [initialMovies, setInitialMovies] = React.useState([]);
	// –°—Ç–µ–π—Ç —Å –º–∞—Å—Å–∏–≤–æ–º —Ñ–∏–ª—å–º–æ–≤, –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö –ø–æ –∫–ª—é—á–µ–≤–æ–º—É —Å–ª–æ–≤—É (–∏ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö, –æ—Å—Ç–∞–≤–ª–µ–Ω—ã —Ç–æ–ª—å–∫–æ –Ω—É–∂–Ω—ã–µ –¥–ª—è –æ—Ç—Ä–∏—Å–æ–≤–∫–∏ –ø–æ–ª—è)
	const [movies, setMovies] = React.useState([]);
	// –°—Ç–µ–π—Ç —Å –º–∞—Å—Å–∏–≤–æ–º —Ñ–∏–ª—å–º–æ–≤, –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ –æ—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
	const [shortMovies, setShortMovies] = React.useState([]);
	// –°—Ç–µ–π—Ç —Å –º–∞—Å—Å–∏–≤–æ–º —Ñ–∏–ª—å–º–æ–≤, –ø–µ—Ä–µ–¥–∞–≤–∞–µ–º—ã–π –¥–ª—è –æ—Ç—Ä–∏—Å–æ–≤–∫–∏ –≤ MoviesCardList (–∑–¥–µ—Å—å —É–∂–µ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω—ã –¥–≤–∞ –ø–æ–ª—è - duration –∏ image.url)
	const [renderedMovies, setRenderedMovies] = React.useState([]);
	// –°—Ç–µ–π—Ç —Å –º–∞—Å—Å–∏–≤–æ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö —Ñ–∏–ª—å–º–æ–≤
	const [savedMovies, setSavedMovies] = React.useState([]);
	// –°—Ç–µ–π—Ç —Å–æ –∑–Ω–∞—á–µ–Ω–∏–µ–º –∏–Ω–ø—É—Ç–∞ —Ñ–æ—Ä–º—ã –ø–æ–∏—Å–∫–∞ —Ñ–∏–ª—å–º–æ–≤
	const [moviesInputValue, setMoviesInputValue] = React.useState('');
	// –°—Ç–µ–π—Ç —Å–æ –∑–Ω–∞—á–µ–Ω–∏–µ–º —á–µ–∫-–±–æ–∫—Å–∞ –∫–æ—Ä–æ—Ç–∫–æ–º–µ—Ç—Ä–∞–∂–µ–∫
	const [shortFilmsCheckboxValue, setShortFilmsCheckboxValue] =
		React.useState(false);
	// –°—Ç–µ–π—Ç –ø—Ä–µ–ª–æ–∞–¥–µ—Ä–∞ –¥–ª—è –µ–≥–æ –æ—Ç—Ä–∏—Å–æ–≤–∫–∏ –≤ –º–æ–º–µ–Ω—Ç –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∏–ª—å–º–æ–≤
	const [isPreloaderVisible, setIsPreloaderVisible] = React.useState(false);
	// –°—Ç–µ–π—Ç —Å–æ–æ–±—â–µ–Ω–∏—è —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º –ø–æ–∏—Å–∫–∞ —Ñ–∏–ª—å–º–æ–≤ (–ø–æ—Ç–æ–º —Å—é–¥–∞ –ø–æ–ø–∞–¥–∞–µ—Ç —Å—Ç—Ä–æ–∫–∞, —Å—Ç–µ–π—Ç –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –∏ –¥–ª—è —É—Å–ª–æ–≤–Ω–æ–≥–æ —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤, –∏ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å–∞–º–æ–≥–æ —Ç–µ–∫—Å—Ç–∞ —Å–æ–æ–±—â–µ–Ω–∏—è)
	const [badSearchResult, setBadSearchResult] = React.useState(null);

	// –§—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ —Ñ–∏–ª—å–º–æ–≤
	//  –ø–æ –Ω–∞–∂–∞—Ç–∏—é –∫–Ω–æ–ø–∫–∏ –ø–æ–∏—Å–∫–∞ –≤ SearchForm
	const getAndFilterMovies = () => {
		moviesApi
			.getMovies()
			.then((data) => {
				console.log('üöÄ ~ file: App.js ~ line 170 ~ .then ~ data', data);
				// —Ñ–æ—Ä–º–∏—Ä—É–µ–º –∏ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –ø–æ–ª—è –æ–±—ä–µ–∫—Ç–æ–≤ –∏—Å—Ö–æ–¥–Ω–æ–≥–æ –º–∞—Å—Å–∏–≤–∞ —Ñ–∏–ª—å–º–æ–≤
				data = handleFields(data);
				console.log('üöÄ ~ file: App.js ~ line 173 ~ .then ~ data', data);
				// —Å–æ—Ö—Ä–∞–Ω—è–µ–º –≤ —Å—Ç–µ–π—Ç
				setInitialMovies(data);
				// —Ñ–∏–ª—å—Ç—Ä—É–µ–º —Ñ–∏–ª—å–º—ã –ø–æ –∫–ª—é—á–µ–≤–æ–º—É —Å–ª–æ–≤—É
				const filteredMovies = filterWithKeyWord(data, moviesInputValue);
				// —É–±–∏—Ä–∞–µ–º –ø—Ä–µ–ª–æ–∞–¥–µ—Ä
				setIsPreloaderVisible(false);
				// –ø—Ä–∏ —É–¥–∞—á–Ω–æ–º –ø–æ–∏—Å–∫–µ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –µ–≥–æ –≤ –ª–æ–∫–∞–ª—å–Ω–æ–º —Ö—Ä–∞–Ω–∏–ª–∏—â–µ –∏ –≤ —Å—Ç–µ–π—Ç–µ
				if (filteredMovies.length > 0) {
					setMovies(filteredMovies);
					localStorage.setItem('movies', JSON.stringify(filteredMovies));
					localStorage.setItem(
						'shortFilmsCheckboxValue',
						JSON.stringify(shortFilmsCheckboxValue)
					);
					localStorage.setItem('moviesInputValue', moviesInputValue);
				} else {
					// –µ—Å–ª–∏ –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –ø—Ä–æ—Å—Ç–æ –≤—ã–≤–æ–¥–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ, –Ω–∏—á–µ–≥–æ –Ω–µ —Å–æ—Ö—Ä–∞–Ω—è—è
					setBadSearchResult(nothingFoundMessageText);
				}
			})
			.catch((err) => {
				console.log(err);
				// —É–±–∏—Ä–∞–µ–º –ø—Ä–µ–ª–æ–∞–¥–µ—Ä
				setIsPreloaderVisible(false);
				// –≤—ã–≤–æ–¥–∏–º –æ—à–∏–±–∫—É –ø–æ–ª—É—á–µ–Ω–∏—è/–æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–∞–Ω–Ω—ã—Ö
				setBadSearchResult(queryErrorMessageText);
			});
	};

	// –ì–æ—Ç–æ–≤–∏–º –º–∞—Å—Å–∏–≤ —Ñ–∏–ª—å–º–æ–≤ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç
	// —á–µ–∫-–±–æ–∫—Å–∞ –∫–æ—Ä–æ—Ç–∫–æ–º–µ—Ç—Ä–∞–∂–µ–∫:
	// - –ø—Ä–µ–æ–±—Ä–∞–∑—É–µ–º —á–∏—Å–ª–æ–≤–æ–µ –ø–æ–ª–µ duration –≤ —Å—Ç—Ä–æ–∫—É –≤–∏–¥–∞ "__ —á __ –º"
	// - –¥–æ–±–∞–≤–ª—è–µ–º —Ñ–º–ª—å–º–∞–º –ª–∞–π–∫–∏ –∏–∑ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö —Ñ–∏–ª—å–º–æ–≤
	React.useEffect(() => {
		// –µ—Å–ª–∏ —Å—Ç–æ–∏—Ç —á–µ–∫-–±–æ–∫—Å, –±–µ—Ä–µ–º –∫–æ—Ä–æ—Ç–∫–æ–º–µ—Ç—Ä–∞–∂–∫–∏
		let renderedFilms;
		if (shortFilmsCheckboxValue) {
			renderedFilms = [...shortMovies];
		} else {
			renderedFilms = [...movies];
		}
		// –¥–æ–±–∞–≤–ª—è–µ–º –ª–∞–π–∫–∏ –∏–∑ –º–∞—Å—Å–∏–≤–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö —Ñ–∏–ª—å–º–æ–≤
		renderedFilms = renderedFilms.map((item) => {
			return {
				...item,
				isLiked: savedMovies.some((savedMovie) => {
					return item.movieId === savedMovie.movieId;
				}),
			};
		});
		// –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –ø–æ–ª–µ –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∏ —Å–æ—Ö—Ä –≤ —Å—Ç–µ–π—Ç
		renderedFilms = handleDuration(renderedFilms);
		setRenderedMovies(renderedFilms);
		console.log(
			'üöÄ ~ file: App.js ~ line 225 ~ React.useEffect ~ renderedFilms',
			renderedFilms
		);
	}, [
		movies,
		shortMovies,
		savedMovies,
		shortFilmsCheckboxValue,
		setRenderedMovies,
	]);

	return (
		<CurrentUserContext.Provider
			value={{
				modalMenuState,
				setModalMenuState,
				currentUser,
				setCurrentUser,
				isLoggedIn,
				setIsLoggedIn,
				formSubmitError,
				setFormSubmitError,
				initialMovies,
				setInitialMovies,
				movies,
				setMovies,
				shortMovies,
				setShortMovies,
				renderedMovies,
				setRenderedMovies,
				moviesInputValue,
				setMoviesInputValue,
				shortFilmsCheckboxValue,
				setShortFilmsCheckboxValue,
				isPreloaderVisible,
				setIsPreloaderVisible,
				badSearchResult,
				setBadSearchResult,
				savedMovies,
				setSavedMovies,
			}}>
			<div className='app'>
				<Switch>
					<Route exact path='/signin'>
						{/* –∑–∞—â–∏—Ç–∞ –æ—Ç –≤–æ–∑–≤—Ä–∞—Ç–∞ –Ω–∞ —ç–∫—Ä–∞–Ω –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ */}
						{() =>
							isLoggedIn ? (
								<Redirect to='/movies' />
							) : (
								<Login
									loginUser={loginUser}
									formSubmitError={formSubmitError}
									setFormSubmitError={setFormSubmitError}
								/>
							)
						}
					</Route>

					<Route exact path='/signup'>
						{/* –∑–∞—â–∏—Ç–∞ –æ—Ç –≤–æ–∑–≤—Ä–∞—Ç–∞ –Ω–∞ —ç–∫—Ä–∞–Ω —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ */}
						{() =>
							isLoggedIn ? (
								<Redirect to='/movies' />
							) : (
								<Register
									registerUser={registerUser}
									formSubmitError={formSubmitError}
									setFormSubmitError={setFormSubmitError}
								/>
							)
						}
					</Route>

					<Route exact path={['/', '/movies', '/saved-movies', '/profile']}>
						<Header
							isLoggedIn={isLoggedIn}
							openModalMenu={changeModalMenuState}
						/>

						<Switch>
							<Route exact path='/'>
								<Main />
							</Route>

							<Route path='/movies'>
								{/* –∑–∞—â–∏—Ç–∞ –º–∞—Ä—à—Ä—É—Ç–∞ */}
								{() =>
									!isLoggedIn ? (
										<Redirect to='/' />
									) : (
										<Movies
											movies={movies}
											isPreloaderVisible={isPreloaderVisible}
											setIsPreloaderVisible={setIsPreloaderVisible}
											moviesInputValue={moviesInputValue}
											setMoviesInputValue={setMoviesInputValue}
											shortFilmsCheckboxValue={shortFilmsCheckboxValue}
											setShortFilmsCheckboxValue={setShortFilmsCheckboxValue}
											getAndFilterMovies={getAndFilterMovies}
											badSearchResult={badSearchResult}
											setBadSearchResult={setBadSearchResult}
										/>
									)
								}
							</Route>
							<Route path='/saved-movies'>
								{/* –∑–∞—â–∏—Ç–∞ –º–∞—Ä—à—Ä—É—Ç–∞ */}
								{() =>
									!isLoggedIn ? (
										<Redirect to='/' />
									) : (
										<SavedMovies savedMovies={savedMovies} />
									)
								}
							</Route>
							<Route path='/profile'>
								{/* –∑–∞—â–∏—Ç–∞ –º–∞—Ä—à—Ä—É—Ç–∞ */}
								{() =>
									!isLoggedIn ? (
										<Redirect to='/' />
									) : (
										<Profile
										// isLoggedIn={isLoggedIn}
										// setIsLoggedIn={setIsLoggedIn}
										/>
									)
								}
							</Route>
						</Switch>

						<Route exact path={['/', '/movies', '/saved-movies']}>
							<Footer />
						</Route>
					</Route>

					<Route path='*'>
						<Page404 />
					</Route>
				</Switch>
				<ModalMenu
					modalMenuState={modalMenuState}
					closeModalMenu={changeModalMenuState}
				/>
			</div>
		</CurrentUserContext.Provider>
	);
}

export default App;
