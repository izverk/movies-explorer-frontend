import React, { useState } from 'react';
import { Route, Switch } from 'react-router-dom';
import './App.css';
import Header from '../Header/Header';
import Main from '../Main/Main';
import Footer from '../Footer/Footer';
import Movies from '../Movies/Movies';
import SavedMovies from '../SavedMovies/SavedMovies';
import Profile from '../Profile/Profile';
import Login from '../Login/Login';
import Register from '../Register/Register';
import Page404 from '../Page404/Page404';
import ModalMenu from '../ModalMenu/ModalMenu';
import { CurrentUserContext } from '../../contexts/CurrentUserContext';
import moviesApi from '../../utils/MoviesApi';
import { handleMovies } from '../../utils/utils';
import {
	queryErrorMessageText,
	nothingFoundMessageText,
} from '../../utils/constants';

function App() {
	// –°—Ç–µ–π—Ç —Å –¥–∞–Ω–Ω—ã–º–∏ —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
	const [currentUser, setCurrentUser] = useState({});
	// –°—Ç–µ–π—Ç –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω–æ—Å—Ç–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
	const [isLoggedIn, setIsLoggedIn] = useState(false);
	// –°—Ç–µ–π—Ç –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –º–µ–Ω—é –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
	const [modalMenuState, setModalMenuState] = useState(false);
	const changeModalMenuState = () => {
		setModalMenuState((modalMenuState) => !modalMenuState);
	};
	// –°—Ç–µ–π—Ç —Å–æ–æ–±—â–µ–Ω–∏—è —Å –æ—à–∏–±–∫–æ–π —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
	const [regSubmitError, setRegSubmitError] = React.useState('');

	// =========================== –†–ê–ë–û–¢–ê –° –§–ò–õ–¨–ú–ê–ú–ò. –ö–û–ú–ü–û–ù–ï–ù–¢ Movies ==============================

	// –°—Ç–µ–π—Ç —Å –º–∞—Å—Å–∏–≤–æ–º –∑–∞–ø—Ä–æ—à–µ–Ω–Ω—ã—Ö —Ñ–∏–ª—å–º–æ–≤
	const [movies, setMovies] = React.useState(null);
	// –°—Ç–µ–π—Ç —Å–æ –∑–Ω–∞—á–µ–Ω–∏–µ–º –∏–Ω–ø—É—Ç–∞ –ø–æ–∏—Å–∫–∞ —Ñ–∏–ª—å–º–æ–≤
	const [moviesInputValue, setMoviesInputValue] = React.useState('');
	// –°—Ç–µ–π—Ç —Å–æ –∑–Ω–∞—á–µ–Ω–∏–µ–º —á–µ–∫-–±–æ–∫—Å–∞ —Ñ–∏–ª—å—Ç—Ä–∞ –∫–æ—Ä–æ—Ç–∫–æ–º–µ—Ç—Ä–∞–∂–µ–∫
	const [shortFilmsCheckboxValue, setShortFilmsCheckboxValue] =
		React.useState(false);
	// –°—Ç–µ–π—Ç –ø—Ä–µ–ª–æ–∞–¥–µ—Ä–∞ –¥–ª—è –µ–≥–æ –æ—Ç—Ä–∏—Å–æ–≤–∫–∏ –≤ –º–æ–º–µ–Ω—Ç –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∏–ª—å–º–æ–≤
	const [isPreloaderVisible, setIsPreloaderVisible] = useState(false);
	// –°—Ç–µ–π—Ç —Å–æ–æ–±—â–µ–Ω–∏—è —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º –ø–æ–∏—Å–∫–∞ —Ñ–∏–ª—å–º–æ–≤
	const [badSearchResult, setBadSearchResult] = React.useState('');

	// –ü—Ä–∏ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ –¥–æ—Å—Ç–∞—ë–º –∏–∑ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Ö—Ä–∞–Ω–∏–ª–∏—â–∞ —Ä–∞–Ω–µ–µ
	// —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞ —Ñ–∏–ª—å–º–æ–≤ (–ø—Ä–∏ –Ω–∞–ª–∏—á–∏–∏)
	React.useEffect(() => {
		const savedMovies = JSON.parse(localStorage.getItem('movies'));
		const savedSearchText = localStorage.getItem('moviesInputValue');
		const saved–°heckboxState = JSON.parse(
			localStorage.getItem('shortFilmsCheckboxValue')
		);
		if (savedMovies) {
			setMovies(savedMovies);
		}
		if (savedSearchText) {
			setMoviesInputValue(savedSearchText);
		}
		if (saved–°heckboxState) {
			setShortFilmsCheckboxValue(saved–°heckboxState);
		}
	}, []);

	// –§—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ —Ñ–∏–ª—å–º–æ–≤
	//  –ø–æ –Ω–∞–∂–∞—Ç–∏—é –∫–Ω–æ–ø–∫–∏ –ø–æ–∏—Å–∫–∞ –≤ SearchForm
	const getAndFilterMovies = () => {
		moviesApi
			.getMovies()
			.then((movies) => {
				// —Ñ–∏–ª—å—Ç—Ä—É–µ–º –º–∞—Å—Å–∏–≤ —Ñ–∏–ª—å–º–æ–≤ –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å
				//  –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏ —Ñ–æ—Ä–º—ã –ø–æ–∏—Å–∫–∞ –∏ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –ø–æ–ª—è
				const handledMovies = handleMovies(
					movies,
					moviesInputValue,
					shortFilmsCheckboxValue
				);
				console.log(
					'üöÄ ~ file: App.js ~ line 101 ~ .then ~ handledMovies',
					handledMovies
				);
				// —É–±–∏—Ä–∞–µ–º –ø—Ä–µ–ª–æ–∞–¥–µ—Ä
				setIsPreloaderVisible(false);
				// –ø—Ä–∏ —É–¥–∞—á–Ω–æ–º –ø–æ–∏—Å–∫–µ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –µ–≥–æ –≤ –ª–æ–∫–∞–ª—å–Ω–æ–º —Ö—Ä–∞–Ω–∏–ª–∏—â–µ –∏ –≤ —Å—Ç–µ–π—Ç–µ
				if (handledMovies.length > 0) {
					setMovies(handledMovies);
					localStorage.setItem('movies', JSON.stringify(handledMovies));
					localStorage.setItem(
						'shortFilmsCheckboxValue',
						JSON.stringify(shortFilmsCheckboxValue)
					);
					localStorage.setItem('moviesInputValue', moviesInputValue);
				} else {
					// –µ—Å–ª–∏ –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –ø—Ä–æ—Å—Ç–æ –≤—ã–≤–æ–¥–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ, –Ω–∏—á–µ–≥–æ –Ω–µ —Å–æ—Ö—Ä–∞–Ω—è—è
					setBadSearchResult(() => nothingFoundMessageText);
				}
			})
			.catch((err) => {
				console.log(err);
				// —É–±–∏—Ä–∞–µ–º –ø—Ä–µ–ª–æ–∞–¥–µ—Ä
				setIsPreloaderVisible(false);
				// –≤—ã–≤–æ–¥–∏–º –æ—à–∏–±–∫—É –ø–æ–ª—É—á–µ–Ω–∏—è/–æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–∞–Ω–Ω—ã—Ö
				setBadSearchResult(() => queryErrorMessageText);
			});
	};

	// ============================ –†–ê–ë–û–¢–ê –° –§–ò–õ–¨–ú–ê–ú–ò. –ö–û–ú–ü–û–ù–ï–ù–¢ SavedMovies ============================
	const [savedMovies, setSavedMovies] = React.useState(null);

	return (
		<CurrentUserContext.Provider value={currentUser}>
			<div className='app'>
				<Switch>
					<Route exact path='/signin'>
						<Login />
					</Route>

					<Route exact path='/signup'>
						<Register
							regSubmitError={regSubmitError}
							setRegSubmitError={setRegSubmitError}
						/>
					</Route>

					<Route exact path={['/', '/movies', '/saved-movies', '/profile']}>
						<Header
							isLoggedIn={isLoggedIn}
							openModalMenu={changeModalMenuState}
						/>

						<Switch>
							<Route exact path='/'>
								<Main />
							</Route>
							<Route path='/movies'>
								<Movies
									movies={movies}
									isPreloaderVisible={isPreloaderVisible}
									setIsPreloaderVisible={setIsPreloaderVisible}
									moviesInputValue={moviesInputValue}
									setMoviesInputValue={setMoviesInputValue}
									shortFilmsCheckboxValue={shortFilmsCheckboxValue}
									setShortFilmsCheckboxValue={setShortFilmsCheckboxValue}
									getAndFilterMovies={getAndFilterMovies}
									badSearchResult={badSearchResult}
									setBadSearchResult={setBadSearchResult}
								/>
							</Route>
							<Route path='/saved-movies'>
								<SavedMovies savedMovies={savedMovies} />
							</Route>
							<Route path='/profile'>
								<Profile
									isLoggedIn={isLoggedIn}
									setIsLoggedIn={setIsLoggedIn}
								/>
							</Route>
						</Switch>

						<Route exact path={['/', '/movies', '/saved-movies']}>
							<Footer />
						</Route>
					</Route>

					<Route path='*'>
						<Page404 />
					</Route>
				</Switch>
				<ModalMenu
					modalMenuState={modalMenuState}
					closeModalMenu={changeModalMenuState}
				/>
			</div>
		</CurrentUserContext.Provider>
	);
}

export default App;
