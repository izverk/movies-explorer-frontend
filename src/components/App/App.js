import React from 'react';
import { Route, Switch, useHistory, Redirect } from 'react-router-dom';
import './App.css';
import Header from '../Header/Header';
import Main from '../Main/Main';
import Footer from '../Footer/Footer';
import Movies from '../Movies/Movies';
import SavedMovies from '../SavedMovies/SavedMovies';
import Profile from '../Profile/Profile';
import Login from '../Login/Login';
import Register from '../Register/Register';
import Page404 from '../Page404/Page404';
import ModalMenu from '../ModalMenu/ModalMenu';
import moviesApi from '../../utils/MoviesApi';
import mainApi from '../../utils/MainApi';
import { CurrentUserContext } from '../../contexts/CurrentUserContext';
import { handleMovies } from '../../utils/utils';
import {
	queryErrorMessageText,
	nothingFoundMessageText,
	formSubmitErrorText,
} from '../../utils/constants';

function App() {
	const history = useHistory();

	// –°—Ç–µ–π—Ç –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –º–µ–Ω—é –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
	const [modalMenuState, setModalMenuState] = React.useState(false);
	const changeModalMenuState = () => {
		setModalMenuState((modalMenuState) => !modalMenuState);
	};

	// =================== –¢–ï–ö–£–©–ò–ô –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–¨ - –†–ï–ì–ò–°–¢–†–ê–¶–ò–Ø, –ê–í–¢–û–†–ò–ó–ê–¶–ò–Ø, –ó–ê–ì–†–£–ó–ö–ê –ö–û–ù–¢–ï–ù–¢–ê ===================

	// –°—Ç–µ–π—Ç —Å –¥–∞–Ω–Ω—ã–º–∏ —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
	const [currentUser, setCurrentUser] = React.useState({});
	// –°—Ç–µ–π—Ç –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω–æ—Å—Ç–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
	const [isLoggedIn, setIsLoggedIn] = React.useState(false);
	// –°—Ç–µ–π—Ç —Å–æ–æ–±—â–µ–Ω–∏—è —Å –æ—à–∏–±–∫–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã –≤–≤–æ–¥–∞ –¥–∞–Ω–Ω—ã—Ö
	const [formSubmitError, setFormSubmitError] = React.useState('');

	// –§—É–Ω–∫—Ü–∏—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
	function registerUser({ name, email, password }) {
		mainApi
			.register(name, email, password)
			.then((userData) => {
				loginUser({ email, password });
			})
			.catch((err) => {
				console.log('üöÄ ~ file: Register.js ~ line 35 ~ .then ~ err', err);
				// –≤—ã–≤–æ–¥–∏–º –æ—à–∏–±–∫—É –æ—Ç–ø—Ä–∞–≤–∫–∏ –¥–∞–Ω–Ω—ã—Ö –≤ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–µ AuthForm
				setFormSubmitError(formSubmitErrorText);
			});
	}

	// –§—É–Ω–∫—Ü–∏—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
	function loginUser({ email, password }) {
		mainApi
			.login(email, password)
			.then(({ token }) => {
				if (token) {
					localStorage.setItem('token', token);
					mainApi.setTokenHeaders(token);
					checkTokenAndLoadContent();
				} else {
					return;
				}
			})
			.catch((err) => {
				console.log(err);
				// –≤—ã–≤–æ–¥–∏–º –æ—à–∏–±–∫—É –æ—Ç–ø—Ä–∞–≤–∫–∏ –¥–∞–Ω–Ω—ã—Ö –≤ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–µ AuthForm
				setFormSubmitError(formSubmitErrorText);
			});
	}

	// –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–∞–ª–∏—á–∏—è —Ç–æ–∫–µ–Ω–∞ –∏ –∑–∞–ø—É—Å–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (—Ä–∞–Ω–µ–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –ø–æ–∏—Å–∫–∞ —Ñ–∏–ª—å–º–æ–≤)
	const checkTokenAndLoadContent = React.useCallback(() => {
		const token = localStorage.getItem('token');
		if (token) {
			mainApi
				.checkToken(token)
				.then((userData) => {
					// setCurrentUser((prevState) => {
					// 	return { ...prevState, _id: userData._id, email: userData.email };
					// });
					setCurrentUser({
						name: userData.name,
						_id: userData._id,
						email: userData.email,
					});
					setIsLoggedIn(true);
					mainApi.setTokenHeaders(token);
					history.push('/movies');
					getCurrentUserContent();
				})
				.catch((err) => {
					console.log(err);
				});
		}
	}, [history]);

	// –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ç–æ–∫–µ–Ω–∞ –≤ —Ö—Ä–∞–Ω–∏–ª—â–µ –∏ –∑–∞–≥—Ä—É–∂–∞–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
	React.useEffect(() => {
		checkTokenAndLoadContent();
	}, [checkTokenAndLoadContent]);

	// –§—É–Ω–∫—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (—Ä–∞–Ω–µ–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –ø–æ–∏—Å–∫–∞ —Ñ–∏–ª—å–º–æ–≤)
	function getCurrentUserContent() {
		const savedMovies = JSON.parse(localStorage.getItem('movies'));
		const savedSearchText = localStorage.getItem('moviesInputValue');
		const saved–°heckboxState = JSON.parse(
			localStorage.getItem('shortFilmsCheckboxValue')
		);
		if (savedMovies) {
			setMovies(savedMovies);
		}
		if (savedSearchText) {
			setMoviesInputValue(savedSearchText);
		}
		if (saved–°heckboxState) {
			setShortFilmsCheckboxValue(saved–°heckboxState);
		}
	}

	// =================== –ü–û–ò–°–ö –§–ò–õ–¨–ú–û–í –≤ —Å—Ç–æ—Ä–æ–Ω–Ω–µ–º —Å–µ—Ä–≤–∏—Å–µ ===================

	// –°—Ç–µ–π—Ç —Å –º–∞—Å—Å–∏–≤–æ–º –∑–∞–ø—Ä–æ—à–µ–Ω–Ω—ã—Ö —Ñ–∏–ª—å–º–æ–≤
	const [movies, setMovies] = React.useState(null);
	// –°—Ç–µ–π—Ç —Å–æ –∑–Ω–∞—á–µ–Ω–∏–µ–º –∏–Ω–ø—É—Ç–∞ –ø–æ–∏—Å–∫–∞ —Ñ–∏–ª—å–º–æ–≤
	const [moviesInputValue, setMoviesInputValue] = React.useState('');
	// –°—Ç–µ–π—Ç —Å–æ –∑–Ω–∞—á–µ–Ω–∏–µ–º —á–µ–∫-–±–æ–∫—Å–∞ —Ñ–∏–ª—å—Ç—Ä–∞ –∫–æ—Ä–æ—Ç–∫–æ–º–µ—Ç—Ä–∞–∂–µ–∫
	const [shortFilmsCheckboxValue, setShortFilmsCheckboxValue] =
		React.useState(false);
	// –°—Ç–µ–π—Ç –ø—Ä–µ–ª–æ–∞–¥–µ—Ä–∞ –¥–ª—è –µ–≥–æ –æ—Ç—Ä–∏—Å–æ–≤–∫–∏ –≤ –º–æ–º–µ–Ω—Ç –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∏–ª—å–º–æ–≤
	const [isPreloaderVisible, setIsPreloaderVisible] = React.useState(false);
	// –°—Ç–µ–π—Ç —Å–æ–æ–±—â–µ–Ω–∏—è —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º –ø–æ–∏—Å–∫–∞ —Ñ–∏–ª—å–º–æ–≤
	const [badSearchResult, setBadSearchResult] = React.useState('');

	// –§—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ —Ñ–∏–ª—å–º–æ–≤
	//  –ø–æ –Ω–∞–∂–∞—Ç–∏—é –∫–Ω–æ–ø–∫–∏ –ø–æ–∏—Å–∫–∞ –≤ SearchForm
	const getAndFilterMovies = () => {
		moviesApi
			.getMovies()
			.then((movies) => {
				// —Ñ–∏–ª—å—Ç—Ä—É–µ–º –º–∞—Å—Å–∏–≤ —Ñ–∏–ª—å–º–æ–≤ –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å
				//  –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏ —Ñ–æ—Ä–º—ã –ø–æ–∏—Å–∫–∞ –∏ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –ø–æ–ª—è
				const handledMovies = handleMovies(
					movies,
					moviesInputValue,
					shortFilmsCheckboxValue
				);
				console.log(
					'üöÄ ~ file: App.js ~ line 101 ~ .then ~ handledMovies',
					handledMovies
				);
				// —É–±–∏—Ä–∞–µ–º –ø—Ä–µ–ª–æ–∞–¥–µ—Ä
				setIsPreloaderVisible(false);
				// –ø—Ä–∏ —É–¥–∞—á–Ω–æ–º –ø–æ–∏—Å–∫–µ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –µ–≥–æ –≤ –ª–æ–∫–∞–ª—å–Ω–æ–º —Ö—Ä–∞–Ω–∏–ª–∏—â–µ –∏ –≤ —Å—Ç–µ–π—Ç–µ
				if (handledMovies.length > 0) {
					setMovies(handledMovies);
					localStorage.setItem('movies', JSON.stringify(handledMovies));
					localStorage.setItem(
						'shortFilmsCheckboxValue',
						JSON.stringify(shortFilmsCheckboxValue)
					);
					localStorage.setItem('moviesInputValue', moviesInputValue);
				} else {
					// –µ—Å–ª–∏ –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –ø—Ä–æ—Å—Ç–æ –≤—ã–≤–æ–¥–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ, –Ω–∏—á–µ–≥–æ –Ω–µ —Å–æ—Ö—Ä–∞–Ω—è—è
					setBadSearchResult(nothingFoundMessageText);
				}
			})
			.catch((err) => {
				console.log(err);
				// —É–±–∏—Ä–∞–µ–º –ø—Ä–µ–ª–æ–∞–¥–µ—Ä
				setIsPreloaderVisible(false);
				// –≤—ã–≤–æ–¥–∏–º –æ—à–∏–±–∫—É –ø–æ–ª—É—á–µ–Ω–∏—è/–æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–∞–Ω–Ω—ã—Ö
				setBadSearchResult(queryErrorMessageText);
			});
	};

	// ================ –°–û–•–†–ê–ù–ï–ù–ù–´–ï –§–ò–õ–¨–ú–´ –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø ============================

	// –°—Ç–µ–π—Ç —Å –º–∞—Å—Å–∏–≤–æ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö —Ñ–∏–ª—å–º–æ–≤
	const [savedMovies, setSavedMovies] = React.useState(null);

	return (
		<CurrentUserContext.Provider
			value={{
				modalMenuState,
				setModalMenuState,
				currentUser,
				setCurrentUser,
				isLoggedIn,
				setIsLoggedIn,
				formSubmitError,
				setFormSubmitError,
				movies,
				setMovies,
				moviesInputValue,
				setMoviesInputValue,
				shortFilmsCheckboxValue,
				setShortFilmsCheckboxValue,
				isPreloaderVisible,
				setIsPreloaderVisible,
				badSearchResult,
				setBadSearchResult,
				savedMovies,
				setSavedMovies,
			}}>
			<div className='app'>
				<Switch>
					<Route exact path='/signin'>
						{/* –∑–∞—â–∏—Ç–∞ –æ—Ç –≤–æ–∑–≤—Ä–∞—Ç–∞ –Ω–∞ —ç–∫—Ä–∞–Ω –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ */}
						{() =>
							isLoggedIn ? (
								<Redirect to='/movies' />
							) : (
								<Login
									loginUser={loginUser}
									formSubmitError={formSubmitError}
									setFormSubmitError={setFormSubmitError}
								/>
							)
						}
					</Route>

					<Route exact path='/signup'>
						{/* –∑–∞—â–∏—Ç–∞ –æ—Ç –≤–æ–∑–≤—Ä–∞—Ç–∞ –Ω–∞ —ç–∫—Ä–∞–Ω —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ */}
						{() =>
							isLoggedIn ? (
								<Redirect to='/movies' />
							) : (
								<Register
									registerUser={registerUser}
									formSubmitError={formSubmitError}
									setFormSubmitError={setFormSubmitError}
								/>
							)
						}
					</Route>

					<Route exact path={['/', '/movies', '/saved-movies', '/profile']}>
						<Header
							isLoggedIn={isLoggedIn}
							openModalMenu={changeModalMenuState}
						/>

						<Switch>
							<Route exact path='/'>
								<Main />
							</Route>

							<Route path='/movies'>
								{/* –∑–∞—â–∏—Ç–∞ –º–∞—Ä—à—Ä—É—Ç–∞ */}
								{() =>
									!isLoggedIn ? (
										<Redirect to='/' />
									) : (
										<Movies
											movies={movies}
											isPreloaderVisible={isPreloaderVisible}
											setIsPreloaderVisible={setIsPreloaderVisible}
											moviesInputValue={moviesInputValue}
											setMoviesInputValue={setMoviesInputValue}
											shortFilmsCheckboxValue={shortFilmsCheckboxValue}
											setShortFilmsCheckboxValue={setShortFilmsCheckboxValue}
											getAndFilterMovies={getAndFilterMovies}
											badSearchResult={badSearchResult}
											setBadSearchResult={setBadSearchResult}
										/>
									)
								}
							</Route>
							<Route path='/saved-movies'>
								{/* –∑–∞—â–∏—Ç–∞ –º–∞—Ä—à—Ä—É—Ç–∞ */}
								{() =>
									!isLoggedIn ? (
										<Redirect to='/' />
									) : (
										<SavedMovies savedMovies={savedMovies} />
									)
								}
							</Route>
							<Route path='/profile'>
								{/* –∑–∞—â–∏—Ç–∞ –º–∞—Ä—à—Ä—É—Ç–∞ */}
								{() =>
									!isLoggedIn ? (
										<Redirect to='/' />
									) : (
										<Profile
										// isLoggedIn={isLoggedIn}
										// setIsLoggedIn={setIsLoggedIn}
										/>
									)
								}
							</Route>
						</Switch>

						<Route exact path={['/', '/movies', '/saved-movies']}>
							<Footer />
						</Route>
					</Route>

					<Route path='*'>
						<Page404 />
					</Route>
				</Switch>
				<ModalMenu
					modalMenuState={modalMenuState}
					closeModalMenu={changeModalMenuState}
				/>
			</div>
		</CurrentUserContext.Provider>
	);
}

export default App;
